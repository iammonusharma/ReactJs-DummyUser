{"version":3,"sources":["Context/ThemeContext.js","Colors.js","Components/ThemeToggler.js","Components/Header.js","Components/HeroSection.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","createContext","AppTheme","light","textColor","backgroundColor","border","class","imgclass","bulbColor","buttonColor","dark","ThemeToggler","useContext","themeMode","setThemeMode","theme","currentTheme","className","style","padding","fontSize","color","onClick","size","Header","Row","Col","HeroSection","details","fetDetails","textAlign","Card","CardBody","height","width","alt","src","picture","large","CardTitle","name","title","first","last","CardText","location","city","email","dob","age","cell","md","Button","rounded","block","App","themeHook","useState","setDetails","a","Axios","get","data","console","log","results","useEffect","Provider","value","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afcd2b8d.chunk.js","sourcesContent":["import {createContext} from \"react\"\r\n\r\nconst ThemeContext=createContext([\"light\",()=>{}]);\r\n\r\nexport default ThemeContext;","const AppTheme= {\r\n    light:{\r\n        textColor:\"#000000\",\r\n        backgroundColor:\" #f0ad4e\",\r\n        border:\"2px dashed #000\",\r\n        class:\"text-center text-danger bg-warning\",\r\n        imgclass:\"rounded-circle img-thumbnail border-success \",\r\n        bulbColor:\"#000\",\r\n        buttonColor:\"danger text-white\"\r\n    },\r\n    dark:{\r\n        textColor:\"#ff4d00\",\r\n        backgroundColor:\"#333\",\r\n        border:\"2px solid #000\",\r\n        class:\"text-center text-white bg-dark\",\r\n        imgclass:\"rounded-circle img-thumbnail border-danger\",\r\n        bulbColor:\"#fff\",\r\n        buttonColor:\"dark text-white\"\r\n    }\r\n\r\n};\r\n\r\nexport default AppTheme;","import React ,{useContext} from \"react\"\r\nimport ThemeContext from \"../Context/ThemeContext\"\r\nimport AppTheme from \"../Colors\"\r\nimport {FaToggleOff,FaToggleOn} from \"react-icons/fa\"\r\nconst ThemeToggler=()=>{\r\n    const [themeMode,setThemeMode]=useContext(ThemeContext)\r\n    const theme=useContext(ThemeContext)[0]\r\n    const currentTheme=AppTheme[theme]\r\n    return(\r\n            \r\n            <button className=\"mt-2\"\r\n            style={{\r\n                backgroundColor:`${currentTheme.backgroundColor}`,\r\n                padding:\"10px 35px\",\r\n                fontSize:\"20px\",\r\n                color:`${currentTheme.bulbColor}`,\r\n                border:`${currentTheme.border}`\r\n            }}\r\n            onClick={()=>{\r\n                setThemeMode(themeMode===\"light\" ? \"dark\":\"light\")}}\r\n            >{themeMode===\"light\" ?\r\n            <span>Switch to Dark <FaToggleOff size={35}/></span>\r\n            :<span>Switch to Light <FaToggleOn size={35}/></span>}\r\n            </button>\r\n    )\r\n}\r\n\r\nexport default ThemeToggler;","import React from \"react\"\r\nimport { Col, Row } from \"reactstrap\";\r\nimport ThemeToggler from \"./ThemeToggler\"\r\n\r\nconst Header=()=>{\r\n    return(\r\n        <Row>\r\n            <Col>\r\n            <header>\r\n                 <h1><center>Dummy User</center></h1>\r\n            </header>\r\n            </Col>\r\n            <Col><ThemeToggler/></Col>\r\n            \r\n        </Row>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header;","import React,{useContext} from \"react\"\r\nimport ThemeContext from \"../Context/ThemeContext\"\r\nimport AppTheme from \"../Colors\"\r\nimport {Card,CardBody,CardTitle,CardText,Button} from \"reactstrap\"\r\nimport {FaEnvelope,FaMapMarkedAlt,FaBirthdayCake,FaPhoneSquareAlt} from \"react-icons/fa\"\r\n\r\n\r\nconst HeroSection=({details,fetDetails})=>{\r\n    const theme=useContext(ThemeContext)[0]\r\n    const currentTheme=AppTheme[theme]\r\n    return(\r\n        <>\r\n        <div\r\n        style={{\r\n            // padding:\"1rem\",\r\n            backgroundColor:`${currentTheme.backgroundColor}`,\r\n            color:`${currentTheme.textColor}`,\r\n            textAlign:\"center\",\r\n        }}\r\n        >\r\n            \r\n            <Card>\r\n            <CardBody className={`${currentTheme.class}`}>\r\n                <img height=\"150\" width=\"150\" alt=\"user pic\"\r\n                className={`${currentTheme.imgclass}`}\r\n                src={details.picture?.large}\r\n                />\r\n                <CardTitle>\r\n                    <h1>\r\n                        <span className=\"pr-2\">{details.name?.title}</span>\r\n                        <span className=\"p-2\">{details.name?.first}</span>\r\n                        <span>{details.name?.last}</span>\r\n                    </h1>\r\n                </CardTitle>\r\n                <CardText>\r\n                    <FaMapMarkedAlt/>{\" \"}\r\n                    {details.location?.city}\r\n                </CardText>\r\n                <CardText className=\"pr-2\">\r\n                   <h5>\r\n                   <FaEnvelope/>{\" \"}\r\n                    {details.email}   \r\n                    </h5> \r\n                </CardText>\r\n                <CardText className=\"p-2\">\r\n                   <h6>\r\n                   <FaBirthdayCake/>{\" \"}\r\n                    {details.dob?.age}   \r\n                    </h6> \r\n                </CardText>\r\n                <CardText className=\"p-1\">\r\n                   <h6>\r\n                   <FaPhoneSquareAlt/>{\" \"}\r\n                    {details.cell}   \r\n                    </h6> \r\n                </CardText>\r\n            </CardBody>\r\n        </Card>\r\n        </div>\r\n        <span\r\n        md={4} className=\"offset-md-4 mt-2\">\r\n       <center>\r\n       <Button \r\n       rounded\r\n       color={`${currentTheme.buttonColor}`} block\r\n       onClick={()=>fetDetails()}\r\n       >Reload\r\n       </Button>\r\n       </center>\r\n       </span>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default HeroSection;","import React,{useState,useEffect} from \"react\"\nimport {Container,Row,Col} from \"reactstrap\"\nimport  \"bootstrap/dist/css/bootstrap.min.css\"\nimport ThemeContext from \"./Context/ThemeContext\"\nimport Header from \"./Components/Header\"\nimport HeroSection from \"./Components/HeroSection\"\nimport Axios from \"axios\"\nconst App=()=>{\n  const themeHook=useState(\"light\")\n  const [details,setDetails]=useState({})\n    const fetDetails= async ()=>{\n    const {data}=await Axios.get('https://randomuser.me/api/');\n    console.log(\"Response:\",data);\n    const details=data.results[0]\n    setDetails(details);\n  };\n  useEffect(()=>{\n    fetDetails();\n  },[])\n  \n  return (\n    <ThemeContext.Provider value={themeHook}>\n       <Container fluid className=\"p-1 App\">\n        <Row>\n          <Col md={4} className=\"offset-md-4\">\n          <Header/>\n          <HeroSection  details={details} fetDetails={fetDetails}/>\n          </Col>\n        </Row>\n      </Container>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}